{"ast":null,"code":"var _jsxFileName = \"/Users/yanzexu/tip-calculator/frontend-mentor-react-tip-calculator/tip-calc/src/Components/TipCalc.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TipButton } from '../Styled.components/TipButtons';\nimport { ResetButton } from '../Styled.components/TipButtons';\nimport './TipCalc.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TipCalc = ({\n  handleClick,\n  groupSize,\n  tip,\n  total,\n  totalPerPerson,\n  percent\n}) => {\n  _s();\n\n  const [bill, setBill] = useState('');\n  const [tipPercentage, setTipPercentage] = useState(0);\n  const [divisor, setDivisor] = useState('');\n\n  const btnClick = e => {\n    e.preventDefault();\n    const tipVal = parseFloat(e.target.value);\n    setTipPercentage(tipVal);\n    console.log(e.target);\n  };\n\n  const calculateBill = num => {\n    handleClick(tipPercentage, bill, divisor);\n  };\n\n  if (divisor !== '') {\n    calculateBill();\n  }\n\n  const resetForm = () => {\n    setBill(0);\n    setTipPercentage(0);\n    setDivisor(0);\n    handleClick(0, 0, 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"$\",\n          value: bill,\n          onChange: e => setBill(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Select Tip %\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftBtn\",\n        children: [/*#__PURE__*/_jsxDEV(TipButton, {\n          value: \"5\",\n          onClick: btnClick,\n          children: \"5%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TipButton, {\n          value: \"10\",\n          onClick: btnClick,\n          children: \"10%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TipButton, {\n          value: \"15\",\n          onClick: btnClick,\n          children: \"15%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TipButton, {\n          value: \"25\",\n          onClick: btnClick,\n          children: \"25%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TipButton, {\n          value: \"50\",\n          onClick: btnClick,\n          children: \"50%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TipButton, {\n          value: \"0\",\n          onClick: btnClick,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"custom\",\n            type: \"number\",\n            min: \"1\",\n            placeholder: \"custom\",\n            onChange: e => setTipPercentage(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Number Of People\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: divisor,\n          placeholder: \"People in Party\",\n          onChange: e => setDivisor(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tipAmount\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Tip Amount @ %\", percent, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"/ person (\", groupSize, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dollarDisplay\",\n          children: tip ? `$${(tip / groupSize).toFixed(2)}` : 0.0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tipAmount\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"/ person (\", groupSize, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dollarDisplay\",\n          children: [groupSize ? `$${totalPerPerson.toFixed(2)}` : 0.0, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tipAmount\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total Bill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"dollarDisplay\",\n          children: [\"$\", total.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResetButton, {\n        className: \"button\",\n        onClick: resetForm,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TipCalc, \"OWx4hsP4+0tTGsqMFy/9tYYqqGE=\");\n\n_c = TipCalc;\nexport default TipCalc;\n\nvar _c;\n\n$RefreshReg$(_c, \"TipCalc\");","map":{"version":3,"sources":["/Users/yanzexu/tip-calculator/frontend-mentor-react-tip-calculator/tip-calc/src/Components/TipCalc.js"],"names":["React","useState","TipButton","ResetButton","TipCalc","handleClick","groupSize","tip","total","totalPerPerson","percent","bill","setBill","tipPercentage","setTipPercentage","divisor","setDivisor","btnClick","e","preventDefault","tipVal","parseFloat","target","value","console","log","calculateBill","num","resetForm","parseInt","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { TipButton } from '../Styled.components/TipButtons';\nimport { ResetButton } from '../Styled.components/TipButtons';\nimport './TipCalc.css';\n\nconst TipCalc = ({ handleClick, groupSize, tip, total, totalPerPerson, percent }) => {\n  const [bill, setBill] = useState('');\n  const [tipPercentage, setTipPercentage] = useState(0);\n  const [divisor, setDivisor] = useState('');\n\n  const btnClick = (e) => {\n    e.preventDefault();\n    const tipVal = parseFloat(e.target.value);\n\n    setTipPercentage(tipVal);\n    console.log(e.target);\n  };\n\n  const calculateBill = (num) => {\n    handleClick(tipPercentage, bill, divisor);\n  };\n  if (divisor !== '') {\n    calculateBill();\n  }\n  const resetForm = () => {\n    setBill(0);\n    setTipPercentage(0);\n    setDivisor(0);\n    handleClick(0, 0, 0);\n  };\n\n  return (\n    <div className='display'>\n      <form>\n        <div className='leftInput'>\n          <label>Bill</label>\n          <input\n            type='number'\n            placeholder='$'\n            value={bill}\n            onChange={(e) => setBill(parseFloat(e.target.value))}\n          ></input>\n        </div>\n        <label className='label'>Select Tip %</label>\n        <div className='leftBtn'>\n          <TipButton value='5' onClick={btnClick}>\n            5%\n          </TipButton>\n          <TipButton value='10' onClick={btnClick}>\n            10%\n          </TipButton>\n          <TipButton value='15' onClick={btnClick}>\n            15%\n          </TipButton>\n          <TipButton value='25' onClick={btnClick}>\n            25%\n          </TipButton>\n          <TipButton value='50' onClick={btnClick}>\n            50%\n          </TipButton>\n          <TipButton value='0' onClick={btnClick}>\n            <input\n              className='custom'\n              type='number'\n              min='1'\n              placeholder='custom'\n              onChange={(e) => setTipPercentage(parseFloat(e.target.value))}\n            ></input>\n          </TipButton>\n        </div>\n        <div className='leftInput'>\n          <label>Number Of People</label>\n          <input\n            type='number'\n            min='1'\n            value={divisor}\n            placeholder='People in Party'\n            onChange={(e) => setDivisor(parseInt(e.target.value))}\n          ></input>\n        </div>\n      </form>\n      <div className='holder'>\n        <div className='tipAmount'>\n          <div>\n            <h3>Tip Amount @ %{percent} </h3>\n            <p>/ person ({groupSize})</p>\n          </div>\n          <h1 className='dollarDisplay'>{tip ? `$${(tip / groupSize).toFixed(2)}` : 0.0}</h1>\n        </div>\n        <div className='tipAmount'>\n          <div>\n            <h3>Total</h3>\n            <p>/ person ({groupSize})</p>\n          </div>\n          <h1 className='dollarDisplay'>{groupSize ? `$${totalPerPerson.toFixed(2)}` : 0.0} </h1>\n        </div>\n        <div className='tipAmount'>\n          <div>\n            <h3>Total Bill</h3>\n            <p>Group</p>\n          </div>\n          <h1 className='dollarDisplay'>${total.toFixed(2)}</h1>\n        </div>\n        <ResetButton className='button' onClick={resetForm}>\n          Reset\n        </ResetButton>\n      </div>\n    </div>\n  );\n};\n\nexport default TipCalc;\n"]},"metadata":{},"sourceType":"module"}