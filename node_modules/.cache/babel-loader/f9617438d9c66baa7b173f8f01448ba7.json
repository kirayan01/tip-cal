{"ast":null,"code":"var _jsxFileName = \"/Users/yanzexu/tip-calc/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Header } from './Styled.components/Header';\nimport { DisplayBox } from './Styled.components/DisplayBox';\nimport TipCalc from './Components/TipCalc';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [total, setTotal] = useState(0);\n  const [tip, setTip] = useState(0);\n  const [bill, setBill] = useState('');\n  const [divisor, setDiviosr] = useState(1);\n\n  const calculateValues = () => {\n    setTotal(parseFloat(bill * (tip / 100) + bill));\n  };\n\n  const tipBtnClick = (tip, billAmount, divisor) => {\n    setDiviosr(parseInt(divisor));\n    setBill(parseFloat(billAmount));\n    setTip(parseFloat(tip / 100 * 100));\n    console.log(tip / 100 * billAmount);\n    calculateValues();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"spli\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: \"tter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayBox, {\n      children: /*#__PURE__*/_jsxDEV(TipCalc, {\n        handleClick: tipBtnClick,\n        bill: bill,\n        totalPerPerson: total / divisor,\n        groupSize: divisor,\n        total: total,\n        tip: total - bill,\n        percent: tip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rU9ayVT1OzCzbEyyLL1N1TFTlrY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yanzexu/tip-calc/src/App.js"],"names":["Header","DisplayBox","TipCalc","useState","App","total","setTotal","tip","setTip","bill","setBill","divisor","setDiviosr","calculateValues","parseFloat","tipBtnClick","billAmount","parseInt","console","log"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,4BAAvB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACI,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;;AAEA,QAAMU,eAAe,GAAG,MAAM;AAC5BP,IAAAA,QAAQ,CAACQ,UAAU,CAACL,IAAI,IAAIF,GAAG,GAAG,GAAV,CAAJ,GAAqBE,IAAtB,CAAX,CAAR;AACD,GAFD;;AAIA,QAAMM,WAAW,GAAG,CAACR,GAAD,EAAMS,UAAN,EAAkBL,OAAlB,KAA8B;AAChDC,IAAAA,UAAU,CAACK,QAAQ,CAACN,OAAD,CAAT,CAAV;AACAD,IAAAA,OAAO,CAACI,UAAU,CAACE,UAAD,CAAX,CAAP;AACAR,IAAAA,MAAM,CAACM,UAAU,CAAEP,GAAG,GAAG,GAAP,GAAc,GAAf,CAAX,CAAN;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAaZ,GAAG,GAAG,GAAP,GAAcS,UAA1B;AACAH,IAAAA,eAAe;AAChB,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,WAAW,EAAEE,WADf;AAEE,QAAA,IAAI,EAAEN,IAFR;AAGE,QAAA,cAAc,EAAEJ,KAAK,GAAGM,OAH1B;AAIE,QAAA,SAAS,EAAEA,OAJb;AAKE,QAAA,KAAK,EAAEN,KALT;AAME,QAAA,GAAG,EAAEA,KAAK,GAAGI,IANf;AAOE,QAAA,OAAO,EAAEF;AAPX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAnCQH,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import { Header } from './Styled.components/Header';\nimport { DisplayBox } from './Styled.components/DisplayBox';\nimport TipCalc from './Components/TipCalc';\nimport { useState } from 'react';\n\nfunction App() {\n  const [total, setTotal] = useState(0);\n  const [tip, setTip] = useState(0);\n  const [bill, setBill] = useState('');\n  const [divisor, setDiviosr] = useState(1);\n\n  const calculateValues = () => {\n    setTotal(parseFloat(bill * (tip / 100) + bill));\n  };\n\n  const tipBtnClick = (tip, billAmount, divisor) => {\n    setDiviosr(parseInt(divisor));\n    setBill(parseFloat(billAmount));\n    setTip(parseFloat((tip / 100) * 100));\n    console.log((tip / 100) * billAmount);\n    calculateValues();\n  };\n\n  return (\n    <div className='App'>\n      <Header>spli</Header>\n      <Header>tter</Header>\n      <DisplayBox>\n        <TipCalc\n          handleClick={tipBtnClick}\n          bill={bill}\n          totalPerPerson={total / divisor}\n          groupSize={divisor}\n          total={total}\n          tip={total - bill}\n          percent={tip}\n        />\n      </DisplayBox>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}